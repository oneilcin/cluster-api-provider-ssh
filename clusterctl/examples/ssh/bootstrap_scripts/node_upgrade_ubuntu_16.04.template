          set -e
          set -x
          (
          ARCH=amd64

          # Run in noninteractive mode to avoid erroring when a config file preexists.
          export DEBIAN_FRONTEND=noninteractive
          
          sudo sh -c "curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -"
          cat << EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list
          deb http://apt.kubernetes.io/ kubernetes-xenial main
          EOF

          sudo apt update -y

          # Our Debian packages have versions like "1.8.0-00" or "1.8.0-01". Do a prefix
          # search based on our SemVer to find the right (newest) package version.
          function getversion() {
              name=$1
              prefix=$2
              version=$(sudo apt-cache madison $name | awk '{ print $3 }' | grep ^$prefix | head -n1)
              if [[ -z "$version" ]]; then
                  echo Can\'t find package $name with prefix $prefix
                  exit 1
              fi
              echo $version
          }
          KUBELET=$(getversion kubelet ${KUBELET_VERSION}-)
          KUBEADM=$(getversion kubeadm ${KUBELET_VERSION}-)
          KUBECTL=$(getversion kubectl ${KUBELET_VERSION}-)
          sudo apt install -y \
              kubelet=${KUBELET} \
              kubeadm=${KUBEADM}
          sudo kubeadm upgrade node config --kubelet-version $(kubelet --version | cut -d ' ' -f 2)
          sudo systemctl restart kubelet
          ) 2>&1 | sudo tee /var/log/upgrade.log
